[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = false

[tool.setuptools.dynamic]
version = { attr = "isolation.__version__" }

[tool.setuptools.packages.find]
include = ["isolation*"]
exclude = [
    "*venv", "*venv.*",
    "*tests.*", "*tests",
    "*build", "*build.*",
    "*dist", "*dist.*"
]

[project]
name = "apache-airflow-providers-isolation"
authors = [
    { name = "Fritz Davenport", email = "fritz@astronomer.io" }
]
license = { text = "Apache License 2.0" }
description = "Runtime Operator Isolation in Airflow"
classifiers = [
    "Framework :: Apache Airflow",
    "Framework :: Apache Airflow :: Provider",
]
dynamic = ["version"]
requires-python = ">=3.9,<3.12"
dependencies = [
    "apache-airflow>=2.3,<2.7",
    'apache-airflow-providers-cncf-kubernetes'
]

[project.entry-points.apache_airflow_provider]
provider_info = "isolation.__init__:get_provider_info"

[project.optional-dependencies]
dev = [
    'build',
    'pytest-sugar',
    'pytest',
    'pytest-cov',
    'pytest-dotenv',
    'pytest-integration',
    'pytest-env',
#    'pytest-xdist',
    'detect-secrets',
    'ruff',
    'black',
    'bandit',
    'isort[colors]',
    'pre-commit',
    'pre-commit-hooks',
    'pylint',
    'docker',
    'kubernetes',
]

kubernetes = ['apache-airflow-providers-cncf-kubernetes']
docker = ['apache-airflow-providers-docker']
fargate = ['apache-airflow-providers-amazon']
python = ['apache-airflow']

all = [
    'apache-airflow-providers-cncf-kubernetes',
    'apache-airflow-providers-docker',
    'apache-airflow-providers-amazon',
    'apache-airflow'
]

[project.urls]
Homepage = "https://astronomer.io"
Source = "https://github.com/astronomer/apache-airflow-providers-isolation/"

[project.readme]
file = "README.md"
content-type = "text/markdown"

[tool.ruff]
# Allow lines to be as long as 120 characters.
line-length = 120


[tool.black]
# https://github.com/psf/black
target-version = ["py310"]
line-length = 120
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
    | tests/
)/
'''
[tool.bandit]
exclude_dirs = ["tests"]
skips = [
    "B324",
    "B608",
    "B106"
]


[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 310
line_length = 88

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.pytest.ini_options]
pythonpath = ["."]
norecursedirs = ["dags", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
testpaths = ["tests", "isolation"]

env = [
    # for some reason Airflow kept erroring and saying we didn't have a google secrets backend?
    "AIRFLOW__SECRETS__BACKEND="
]

doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]
addopts = [
    "--continue-on-collection-errors",
    "--ignore=tests/resources",
#    "--numprocesses=auto", # remove this to remove python-xdist or --dist no
    "--strict-markers",
    "--tb=short",
    "--disable-warnings",
    "--no-header",
    "--doctest-modules",
    "--doctest-continue-on-failure",
]
